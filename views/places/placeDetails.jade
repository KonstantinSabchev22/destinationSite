extends ../layout

block content
    h1= place.name
    .container
        .row
            .col-lg-6
                .img-magnifier-container
                    img#myimage(src=place.imageUrl alt="" width="600" height="400")
            .col-lg-6
                .card
                    .card-body
                        h5.card-title Описание
                        p.card-text= place.description
                        h5.card-title Местоположение
                        p.card-text= place.howToReach
                        h5.card-title Тел.
                        p.card-text= place.phone
                        .button-container
                            if user
                                if isFavorite
                                    button.btn.btn-outline-primary(onclick=`toggleFavorite('#{place.id}', this)`) Премахни от любими
                                else
                                    button.btn.btn-primary(onclick="toggleFavorite('#{place.id}', this)") Добави в любими
                                if user.role == 'admin'
                                    a.btn.btn-warning(href='/places/' + place.id + '/edit') Промени
                            a.btn.btn-secondary(href='/places') Назад
    script.
        async function toggleFavorite(placeId, button) {
            try {
                const response = await fetch(`/places/${placeId}/add-favorite`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.text();

                if (response.ok){
                    if (result.includes("added")) {
                        button.className = "btn btn-outline-primary";
                        button.innerHTML = "Премахни от любими";
                    } else {
                        button.className = "btn btn-primary";
                        button.innerHTML = "Добави в любими";
                    }
                } else {
                    console.error('Request problem.');
                }
            } catch(error) {
                console.error(error);
            }
        }

        function magnify(imgID, zoom) {
            var img, glass, w, h, bw;
            img = document.getElementById(imgID);
            /* create magnifier glass: */
            glass = document.createElement("DIV");
            glass.setAttribute("class", "img-magnifier-glass");
            /* insert magnifier glass: */
            img.parentElement.insertBefore(glass, img);
            /* set background properties for the magnifier glass: */
            glass.style.backgroundImage = "url('" + img.src + "')";
            glass.style.backgroundRepeat = "no-repeat";
            glass.style.backgroundSize = (img.width * zoom) + "px " + (img.height * zoom) + "px";
            bw = 3;
            w = glass.offsetWidth / 2;
            h = glass.offsetHeight / 2;
            /* execute a function when someone moves the magnifier glass over the image: */
            glass.addEventListener("mousemove", moveMagnifier);
            img.addEventListener("mousemove", moveMagnifier);
            /* and also for touch screens: */
            glass.addEventListener("touchmove", moveMagnifier);
            img.addEventListener("touchmove", moveMagnifier);
            
            function moveMagnifier(e) {
                var pos, x, y;
                /* prevent any other actions that may occur when moving over the image */
                e.preventDefault();
                /* get the cursor's x and y positions: */
                pos = getCursorPos(e);
                x = pos.x;
                y = pos.y;
                /* prevent the magnifier glass from being positioned outside the image: */
                if (x > img.width - (w / zoom)) { x = img.width - (w / zoom); }
                if (x < w / zoom) { x = w / zoom; }
                if (y > img.height - (h / zoom)) { y = img.height - (h / zoom); }
                if (y < h / zoom) { y = h / zoom; }
                /* set the position of the magnifier glass: */
                glass.style.left = (x - w) + "px";
                glass.style.top = (y - h) + "px";
                /* display what the magnifier glass "sees": */
                glass.style.backgroundPosition = "-" + ((x * zoom) - w + bw) + "px -" + ((y * zoom) - h + bw) + "px";
            }

            function getCursorPos(e) {
                var a, x = 0, y = 0;
                e = e || window.event;
                /* get the x and y positions of the image: */
                a = img.getBoundingClientRect();
                /* calculate the cursor's x and y coordinates, relative to the image: */
                x = e.pageX - a.left;
                y = e.pageY - a.top;
                /* consider any page scrolling: */
                x = x - window.pageXOffset;
                y = y - window.pageYOffset;
                return { x: x, y: y };
            }
        }

        // Initialize magnifier on the image
        document.addEventListener("DOMContentLoaded", () => {
            magnify("myimage", 2); // Adjust zoom level as needed
        });
